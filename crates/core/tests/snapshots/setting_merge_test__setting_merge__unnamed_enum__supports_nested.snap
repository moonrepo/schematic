---
source: crates/core/tests/setting_merge_test.rs
expression: pretty(container.impl_partial_merge())
---
fn merge(
    &mut self,
    context: &Self::Context,
    mut next: Self,
) -> std::result::Result<(), schematic::ConfigError> {
    match self {
        Self::A(pa) => {
            if let Self::A(na) = next {
                pa.merge(context, na)?;
            } else {
                *self = next;
            }
        }
        Self::B(pa) => {
            if let Self::B(na) = next {
                pa.merge(context, na)?;
            } else {
                *self = next;
            }
        }
        Self::C(pa) => {
            if let Self::C(na) = next {
                pa.merge(context, na)?;
            } else {
                *self = next;
            }
        }
        Self::D(pa) => {
            if let Self::D(na) = next {
                pa.merge(context, na)?;
            } else {
                *self = next;
            }
        }
        _ => {
            *self = next;
        }
    };
    Ok(())
}
