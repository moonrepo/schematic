---
source: crates/config/tests/macros_test.rs
expression: "std::fs::read_to_string(file).unwrap()"
---
// Automatically generated by schematic. DO NOT MODIFY!

/* eslint-disable */

export enum SomeEnum {
	A,
	B,
	C,
}

export enum BasicEnum {
	Foo,
	Bar,
	Baz,
}

export enum CustomFormatEnum {
	Foo,
	Bar,
	Baz,
}

export enum OtherEnum {
	Foo,
	Bar,
	Baz,
	Other(""),
}

export enum AliasedEnum {
	Foo,
	Bar,
	Baz,
}

export type ValueTypes = {
	boolean: boolean,
	string: string,
	number: number,
	vector: string[],
	map: Record<string, number>,
	enums: SomeEnum,
}

export type OptionalValues = {
	required: boolean,
	optional: string | null,
}

export type DefaultValues = {
	boolean: boolean,
	booleanFn: boolean,
	string: string,
	stringFn: string,
	fileString: string,
	longString: string,
	pathString: string,
	number: number,
	array: number[],
	tuple: [number, number, number, number],
	vector: number[],
	enums: SomeEnum,
}

export type Serde = {
	renamed: string,
}

export type SerdeNative = {
	renamed: string,
}

export type Merging = {
	basic: string,
}

export type ExtendsString = {
	extends: string,
}

export type ExtendsList = {
	extends: string[],
}

export type ExtendsEnum = {
	extends: string | string[],
}

export type ExtendsOptional = {
	extends: string[] | null,
}

export type EnvVars = {
	basic: string,
	advanced: string[],
}

export type NestedValidations = {
	basic: string,
}

export type Validations = {
	basic: string,
	optional: string | null,
	nested: NestedValidations,
	nested2: NestedValidations | null,
}

export type Comments = {
	normal: boolean,
	docs: boolean,
	inlineBlock: boolean,
	block: boolean,
}
