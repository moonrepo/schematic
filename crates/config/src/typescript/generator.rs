use crate::config::Config;
use std::path::PathBuf;

pub struct TypeScriptGenerator {
    output_file: PathBuf,
}

impl TypeScriptGenerator {
    pub fn new(output_file: PathBuf) -> Self {
        Self { output_file }
    }

    // pub fn add<T: Config>(&mut self, config: T) -> &mut Self {}

    pub fn generate(&self) -> miette::Result<()> {
        let mut output = String::new();

        // output.push_str("// This file is generated by starbase. Do not edit!\n\n");

        // output.push_str("/* eslint-disable */\n\n");

        // output.push_str("export interface Config {\n");

        // for setting in &config.settings {
        // 		output.push_str(&format!(
        // 				"  {}: {};\n",
        // 				setting.name.to_string(),
        // 				setting.type_name
        // 		));
        // }

        // output.push_str("}\n\n");

        // output.push_str("export const config: Config = {\n");

        // for setting in &config.settings {
        // 		output.push_str(&format!(
        // 				"  {}: {},\n",
        // 				setting.name.to_string(),
        // 				setting.default_value
        // 		));
        // }

        // output.push_str("};\n");

        // std::fs::write(&self.output_file, output)?;

        Ok(())
    }
}
