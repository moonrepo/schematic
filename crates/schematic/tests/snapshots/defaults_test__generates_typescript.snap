---
source: crates/schematic/tests/defaults_test.rs
expression: "std::fs::read_to_string(file).unwrap()"
---
// Automatically generated by schematic. DO NOT MODIFY!

/* eslint-disable */

export interface CustomDefaults {
	/** @default true */
	boolean: boolean;
	/** @default 1.32 */
	float: number;
	/** @default 123 */
	number: number;
	/** @default 'foo' */
	string: string;
	vector: number[];
}

export interface ReqOptDefaults {
	optional: number | null;
	required: number;
	/** @default 123 */
	requiredWithDefault: number;
}

export interface ContextDefaults {
	count: number;
	path: string;
}

export interface NativeDefaults {
	boolean: boolean;
	boxed: string;
	float32: number;
	float64: number;
	number: number;
	string: string;
	vector: string[];
}

export interface NestedDefaults {
	nested: NativeDefaults;
	nestedBoxed: {
		boolean: boolean;
		boxed: string;
		float32: number;
		float64: number;
		number: number;
		string: string;
		vector: string[];
	};
	nestedMap: Record<string, NativeDefaults>;
	nestedMapBoxed: Record<string, {
		boolean: boolean;
		boxed: string;
		float32: number;
		float64: number;
		number: number;
		string: string;
		vector: string[];
	}>;
	nestedMapOptBoxed: Record<string, {
		boolean: boolean;
		boxed: string;
		float32: number;
		float64: number;
		number: number;
		string: string;
		vector: string[];
	} | null>;
	nestedOpt: NativeDefaults | null;
	nestedOptBoxed: {
		boolean: boolean;
		boxed: string;
		float32: number;
		float64: number;
		number: number;
		string: string;
		vector: string[];
	} | null;
	nestedVec: NativeDefaults[];
	nestedVecBoxed: {
		boolean: boolean;
		boxed: string;
		float32: number;
		float64: number;
		number: number;
		string: string;
		vector: string[];
	}[];
	nestedVecOptBoxed: ({
		boolean: boolean;
		boxed: string;
		float32: number;
		float64: number;
		number: number;
		string: string;
		vector: string[];
	} | null)[];
}
