---
source: crates/schematic/tests/generator_test.rs
expression: "generate(TypeScriptOptions\n{\n    disable_references: true, indent_char: \"  \".into(),\n    ..TypeScriptOptions::default()\n})"
---
// Automatically generated by schematic. DO NOT MODIFY!

/* eslint-disable */

/** Docblock comment. */
export type BasicEnum = 'foo' | 'bar' | 'baz';

export type FallbackEnum = 'foo' | 'bar' | 'baz' | string;

/** Some comment. */
export interface AnotherConfig {
  /**
   * An optional enum.
   *
   * @default 'foo'
   */
  enums: 'foo' | 'bar' | 'baz' | null;
  /** An optional string. */
  opt: string | null;
}

/** @deprecated */
export interface GenConfig {
  boolean: boolean;
  date: string;
  datetime: string;
  decimal: string;
  /**
   * This is a list of `enumerable` values.
   *
   * @default 'foo'
   * @type {'foo' | 'bar' | 'baz'}
   */
  enums: 'foo' | 'bar' | 'baz';
  /**
   * @default 'foo'
   * @type {'foo' | 'bar' | 'baz' | string}
   */
  fallbackEnum: 'foo' | 'bar' | 'baz' | string;
  float32: number;
  float64: number;
  indexmap: Record<string, string>;
  indexset: string[] | null;
  jsonValue: unknown;
  map: Record<string, number>;
  /** **Nested** field. */
  nested: {
    /**
     * An optional enum.
     *
     * @default 'foo'
     */
    enums: 'foo' | 'bar' | 'baz' | null;
    /** An optional string. */
    opt: string | null;
  };
  number: number;
  path: string;
  relPath: string;
  string: string;
  time: string;
  tomlValue: unknown | null;
  url: string | null;
  uuid: string;
  /** This is a list of strings. */
  vector: string[];
  version: string | null;
  versionReq: string;
  yamlValue: unknown;
}
