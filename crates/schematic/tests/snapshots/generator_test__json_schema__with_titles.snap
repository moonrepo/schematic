---
source: crates/schematic/tests/generator_test.rs
expression: "fs::read_to_string(file).unwrap()"
---
{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "required": [
    "boolean",
    "date",
    "datetime",
    "decimal",
    "enums",
    "float32",
    "float64",
    "indexmap",
    "indexset",
    "jsonValue",
    "map",
    "nested",
    "number",
    "path",
    "relPath",
    "string",
    "time",
    "tomlValue",
    "url",
    "vector",
    "version",
    "versionReq",
    "yamlValue"
  ],
  "properties": {
    "boolean": {
      "title": "boolean",
      "type": "boolean"
    },
    "date": {
      "title": "date",
      "type": "string",
      "format": "date"
    },
    "datetime": {
      "title": "datetime",
      "type": "string",
      "format": "date-time"
    },
    "decimal": {
      "title": "decimal",
      "type": "string",
      "format": "decimal"
    },
    "enums": {
      "title": "enums",
      "description": "This is a list of `enumerable` values.",
      "default": "foo",
      "allOf": [
        {
          "$ref": "#/definitions/BasicEnum"
        }
      ]
    },
    "float32": {
      "title": "float32",
      "type": "number"
    },
    "float64": {
      "title": "float64",
      "type": "number"
    },
    "indexmap": {
      "title": "indexmap",
      "type": "object",
      "additionalProperties": {
        "type": "string"
      },
      "propertyNames": {
        "type": "string"
      }
    },
    "indexset": {
      "title": "indexset",
      "anyOf": [
        {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        {
          "type": "null"
        }
      ]
    },
    "jsonValue": {
      "title": "jsonValue",
      "type": [
        "boolean",
        "object",
        "array",
        "number",
        "string",
        "integer"
      ]
    },
    "map": {
      "title": "map",
      "type": "object",
      "additionalProperties": {
        "type": "number"
      },
      "propertyNames": {
        "type": "string"
      }
    },
    "nested": {
      "title": "nested",
      "description": "**Nested** field.",
      "allOf": [
        {
          "$ref": "#/definitions/AnotherConfig"
        }
      ]
    },
    "number": {
      "title": "number",
      "type": "number"
    },
    "path": {
      "title": "path",
      "type": "string",
      "format": "path"
    },
    "relPath": {
      "title": "relPath",
      "type": "string",
      "format": "path"
    },
    "string": {
      "title": "string",
      "type": "string"
    },
    "time": {
      "title": "time",
      "type": "string",
      "format": "time"
    },
    "tomlValue": {
      "title": "tomlValue",
      "anyOf": [
        {
          "type": [
            "boolean",
            "object",
            "array",
            "number",
            "string",
            "integer"
          ]
        },
        {
          "type": "null"
        }
      ]
    },
    "url": {
      "title": "url",
      "anyOf": [
        {
          "type": "string",
          "format": "uri"
        },
        {
          "type": "null"
        }
      ]
    },
    "vector": {
      "title": "vector",
      "description": "This is a list of strings.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "version": {
      "title": "version",
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ]
    },
    "versionReq": {
      "title": "versionReq",
      "type": "string"
    },
    "yamlValue": {
      "title": "yamlValue",
      "type": [
        "boolean",
        "object",
        "array",
        "number",
        "string",
        "integer"
      ]
    }
  },
  "additionalProperties": false,
  "definitions": {
    "AnotherConfig": {
      "description": "Some comment.",
      "type": "object",
      "required": [
        "enums",
        "opt"
      ],
      "properties": {
        "enums": {
          "title": "enums",
          "description": "An optional enum.",
          "default": "foo",
          "anyOf": [
            {
              "$ref": "#/definitions/BasicEnum"
            },
            {
              "type": "null"
            }
          ]
        },
        "opt": {
          "title": "opt",
          "description": "An optional string.",
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "BasicEnum": {
      "type": "string",
      "enum": [
        "foo",
        "bar",
        "baz"
      ]
    }
  }
}

